apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: e705-ingress-core
  namespace: doa-e705-dev
  labels:
    app: e705-app
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "e705Cookie"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, PATCH, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    minfin.oauth2.be/iam-env: "acc"
    minfin.oauth2.be/iam-realm: "internal"
    minfin.oauth2.be/iam-flow: "oauth"
    minfin.oauth2.be/clientId: "E705"
    minfin.oauth2.be/authentication-only: "true"
    minfin.oauth2.be/scopes: "openid profile"
    minfin.oauth2.be/fineGrainedWs: "true"
spec:
  ingressClassName: oauth2
  tls:
    - hosts:
        - e705.dev.finbel.intra
      secretName: e705-tls
  rules:
    - host: e705.dev.finbel.intra
      http:
        paths:
          - path: /api/core/
            pathType: Prefix
            backend:
              service:
                name: e705-back-service
                port:
                  number: 8080
